---
- hosts: localhost
  gather_facts: True
  vars_files:
    - network_configs.yml

  tasks:
  - name: Define the network
    virt_net:
      command: define
      name: '{{ network[item].network_name }}'
      xml: '{{ lookup("template", "templates/bridge.xml.j2") }}'
      state: present
    with_items: "{{ network }}"
    become: yes

  - name: Create the network
    virt_net:
      command: create
      name: '{{ network[item].network_name }}'
      autostart: true
    with_items: "{{ network }}"
    ignore_errors: true
    become: yes

  - name: Assign IP addresses
    command: "ip addr add {{ network[item].ip_address }}/{{ network[item].subnet_mask_num }} dev {{ network[item].bridge_name }}"
    when: 
      - network[item].bridge_type != "bridge"
      - (ansible_facts[network[item].bridge_name]['ipv4'] is not defined) or (ansible_facts[network[item].bridge_name]['ipv4']['address'] != network[item].ip_address)
    with_items: "{{ network }}"
    become: yes

#  - name: Start the network
#    virt_net:
#      command: start
#      name: '{{ network_name }}'
#
#  - name: Show networks
#    virt_net:
#      command: list_nets
#    register: out
#  - debug: var=out
