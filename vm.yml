---
- hosts: localhost
  gather_facts: False 

  vars:
    disk_dir: /var/lib/libvirt/images
  vars_files:
    - config_files/vm_configs.yml
    - config_files/network_configs.yml

  tasks:
  - name: Parse VM data
    template:
      src: templates/jinja2_templates/vm_parser.j2 
      dest: "templates/VM_Templates/{{ item.name }}_interfaces.xml"
    with_items: "{{ vms }}"
    become: yes

  - name: Create VM templates
    copy:
      src: templates/jinja2_templates/vm_main.xml.j2
      dest: templates/VM_Templates/{{item.name}}.xml.j2
    with_items: "{{ vms }}"
    become: yes

  - name: Populate VM templates
    blockinfile:
      path: templates/VM_Templates/{{item.name}}.xml.j2
      marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
      insertbefore: "<serial type='pty'>"
      block: "{{ lookup('file', 'templates/VM_Templates/{{ item.name }}_interfaces.xml') }}"
    with_items: "{{ vms }}"
    become: yes
  
  - name: Get list of VM disks
    command: "ls {{ disk_dir }}"
    register: disk_file
    changed_when: "disk_file.rc != 0"
    become: yes

  - name: Copy main VM image
    copy:
      src: "~/Ansible-OVS-KVM/temp.img"
      dest: "{{ disk_dir }}/{{ item.name }}.img"
    with_items: "{{ vms }}"
    when: item.name not in disk_file.stdout
    become: yes

  - name: Define VMs
    virt:
      name: "{{ item.name }}"
      command: define
      xml: "{{ lookup('template', 'templates/VM_Templates/{{ item.name }}.xml.j2') }}"
    with_items: "{{ vms }}"

  - name: Create VM
    virt:
      name: "{{ item.name }}"
      command: create
      state: destroyed
    with_items: "{{ vms }}"

  - name: Start VM
    virt:
      name: "{{ item.name }}"
      command: start
    with_items: "{{ vms }}"
